# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  servicecon: 'AWSTerraform'
  bucket: tf-azuredevops-tf-state
  state: terraform.tfstate

stages:
  - stage: tfvalidate
    jobs:
      - job: validate
        continueOnError: false
        steps:
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: 'Terraform init'
            inputs:
              provider: 'aws'
              command: 'init'
              backendServiceAWS: 'AWSTerraform'
              backendAWSBucketName: '$(bucket)'
              backendAWSKey: '$(state)'
          - task: TerraformTaskV4@4
            displayName: 'terraform validate'
            inputs:
              provider: 'aws'
              command: 'validate'
  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:
          - task: TerraformTaskV4@4
            displayName: 'terraform plan'
            inputs:
              provider: 'aws'
              command: 'plan'
          - task: TerraformTaskV4@4
            displayName: 'terraform apply'
            inputs:
              provider: 'aws'
              command: 'apply'
